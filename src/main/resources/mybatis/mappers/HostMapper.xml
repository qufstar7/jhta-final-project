<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.airbnb.mapper.HostMapper">

<resultMap type="Accommodation" id="HostAccResultMap">
	<id column="ACC_NO" property="accNo"/>
	<result column="ACC_NAME" property="name"/>
	<result column="ACC_DESCRIPTION" property="description"/>
	<result column="ACC_address" property="address"/>
	<result column="ACC_LATITUDE" property="latitude"/>
	<result column="ACC_LONGITUDE" property="longitude"/>
	<result column="ACC_PRICE" property="price"/>
	<result column="ACC_GUEST" property="guest"/>
	<result column="ACC_STATUS" property="status"/>
	<result column="ACC_CREATED_DATE" property="createdDate"/>
	<result column="ACC_UPDATED_DATE" property="updatedDate"/>
	<result column="IMAGE_COVER" property="imageCover"/>
	<association property="user" column="USER_NO" select="kr.co.airbnb.mapper.UserMapper.getUserByNo"/>
</resultMap>
	
<resultMap type="Accommodation" id="HostAccDetailResultMap" extends="HostAccResultMap">
	<collection property="conveniences" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccConveniencesByAccNo"></collection>
 	<collection property="photos" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccPhotosByAccNo"></collection>
 	<collection property="rooms" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getRoomByAccNo"></collection>
    <collection property="types" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAllTypesByAccNo"></collection>
    <collection property="tags" column="ACC_NO" select="kr.co.airbnb.mapper.HostMapper.getAllTagsByAccNo"></collection>
    <collection property="reservations" column="ACC_NO" select="kr.co.airbnb.mapper.HostMapper.getAllreservationsByAccNo"></collection>
</resultMap>


<!-- List<Accommodation> getAllAccByUser(User loginUser); -->
<select id="getAllAccByUser" parameterType="User" resultMap="HostAccDetailResultMap">
	select *
	from AIRBNB_ACCOMMODATIONS
	where user_no = #{no}
</select>
	
<!-- Accommodation getAccByAccNo(int accNo); -->
<select id="getAccByAccNo" parameterType="int" resultMap="HostAccDetailResultMap">
	select *
	from AIRBNB_ACCOMMODATIONS
	where acc_no = #{value}
</select>

<!-- List<AccTag> getAllTagsByAccNo(int accNo); -->
<select id="getAllTagsByAccNo" parameterType="int" resultType="Tag">
	select a.tag_id, a.tag_name, a.tag_icon
	from airbnb_tags a, airbnb_acc_tags b
	where a.tag_id = b.tag_id
	and b.acc_no = #{value}
</select>

<!-- List<Reservation> getAllreservationsByAccNo(int accNo) -->
<select id="getAllreservationsByAccNo" parameterType="int" resultType="Reservation">
	select
		A.reservation_no as no,
		A.user_no as userNo, 
		A.acc_no as accNo, 
		B.user_name as userName,
		A.reservation_status as reservationStatus, 
		A.check_in_date as checkInDate, 
		A.check_out_date as checkOutDate, 
		A.adult_number as adultNum, 
		A.children_number as childrenNum, 
		A.infant_number as infantNum, 
		A.PET_NUMBER as petNum, 
		A.MESSAGE_TO_HOST as messageToHost,
		A.RESERVATION_CREATED_DATE as createdDate,
		A.RESERVATION_UPDATED_DATE as updatedDate,
		A.ACC_SERVICE_FEE as serviceFee,
		A.ACC_TOTAL_PRICE as totalPrice,
		A.ENTIRE_PAYMENT as entirePayment,
		A.LEFT_PAYMENT as leftPay
	from airbnb_reservations A, airbnb_users B
	where acc_no = #{value}
	and A.user_no = B.user_no
</select>
	
<!-- int getMostRecentRegisteredAccNo(); -->
<select id="getMostRecentRegisteredAccNo" resultType="int">
	select *
	from airbnb_accommodations
	where acc_created_date = (select MAX(acc_created_date)
	                          from airbnb_accommodations)
</select>

<!-- List<Type> getAllMainTypes(); -->
<select id="getAllMainTypes" resultType="Type">
	select type_no as no, type_name as name, image_name as imageName
	from airbnb_types
	where main_type is null
	and privacy_type = 'N'
	order by no
</select>

<!-- List<Type> getAllSubTypes(int mainType); -->
<select id="getAllSubTypes" parameterType="int" resultType="Type">
	select type_no as no, type_name as name, image_name as imageName, type_description as description
	from airbnb_types
	where main_type = #{value}
	order by type_no
</select>

<!-- List<Type> getAllPrivacyTypes(); -->
<select id="getAllPrivacyTypes" resultType="Type">
	select type_no as no, type_name as name
	from airbnb_types
	where privacy_type = 'Y'
	order by type_no
</select>

<!-- Type getTypeByNo(int typeNo); -->
<select id="getTypeByNo" parameterType="int" resultType="Type">
	select *
	from airbnb_types
	where type_no = #{value}
</select>

<!-- List<Tag> getAllTags(); -->
<select id="getAllTags" resultType="Tag">
	select tag_id as id, tag_name as name, tag_icon as icon
	from airbnb_tags
	order by tag_id
</select>

<!-- AccRoom getAllRoomInfoByAccNo(int accNo); -->
<select id="getAllRoomInfoByAccNo" parameterType="int" resultType="room">
	select acc_no as accNo, room_bedroom as bedroom, room_bed as bed, room_bathroom as bathroom
	from airbnb_acc_rooms
	where acc_no = #{value}
</select>

<!-- List<Accommodation> getAllAccIncompleteByUser(User loginUser); -->
<select id="getAllAccIncompleteByUser" parameterType="User" resultMap="HostAccDetailResultMap">
	select *
	from AIRBNB_ACCOMMODATIONS
	where user_no = #{no}
	and acc_status = '등록미완'
</select>

<!-- List<Accommodation> getAllAccNotIncompleteByUser(User loginUser); -->
<select id="getAllAccNotIncompleteByUser" parameterType="User" resultMap="HostAccDetailResultMap">
	select *
	from AIRBNB_ACCOMMODATIONS
	where user_no = #{no}
	and acc_status != '등록미완'
</select>

<!-- insert -->
<!-- void insertAcc(Accommodation acc); -->	
<insert id="insertAcc" parameterType="Accommodation">
	<selectKey keyProperty="accNo" resultType="int" order="BEFORE">
		select Accommodations_seq.nextval
		from dual
	</selectKey>
	insert into airbnb_accommodations
	(acc_no, user_no, acc_status)
	values
	(#{accNo}, #{user.no}, #{status})
</insert>

<!-- void insertAccType(AccType accType); -->
<insert id="insertAccType" parameterType="AccType">
	INSERT INTO airbnb_acc_types (acc_no, type_no)
	SELECT #{accNo}
	     , #{type.no}
	  FROM dual
	 WHERE NOT EXISTS (SELECT *
	                     FROM airbnb_acc_types
	                    WHERE type_no = #{type.no}
	                    and acc_no = #{accNo})
</insert>

<!-- void insertAccRoom(AccRoom accRoom); -->
<insert id="insertAccRoom" parameterType="room">
	INSERT INTO airbnb_acc_rooms 
	(room_no, acc_no, room_bedroom, room_bed, room_bathroom)
	SELECT #{accNo}, #{accNo}, #{bedroom}, #{bed}, #{bathroom}
	  FROM dual
	 WHERE NOT EXISTS (SELECT *
	 					 FROM airbnb_acc_rooms
	 					WHERE acc_no = #{accNo})
</insert>

<!-- void insertAccConvenience(AccConvenience accConvenience); -->
<insert id="insertAccConvenience" parameterType="AccConvenience">
	insert into AIRBNB_ACC_CONVENIENCES
	(ACC_NO, CONVENIENCE_NO)
	values
	(#{accNo}, #{convenience.no})
</insert>
	
<!-- void insertAccPhotos(AccPhoto accPhoto); -->
<insert id="insertAccPhotos" parameterType="AccPhoto">
	<selectKey keyProperty="imageNo" resultType="int" order="BEFORE">
		select PHOTOS_SEQ.nextval
		from dual
	</selectKey>
	insert into airbnb_acc_photos
	(image_no, acc_no, image_name, image_cover)
	values
	(#{imageNo}, #{accNo}, #{name}, #{cover} )
</insert>

<!-- void insertAccTags(AccTag accTag); -->
<insert id="insertAccTags" parameterType="AccTag">
	insert into airbnb_acc_tags
	(acc_no, tag_id)
	values
	(#{accNo}, #{tagId})
</insert>

<!-- update -->
<!-- void updateMainType(AccType accType); -->
<update id="updateMainType" parameterType="AccType">
	update airbnb_acc_types
	set 
		type_no = #{type.no}
	where acc_no = #{accNo}
	and type_no in (1, 2, 3, 4, 5, 6)
</update>
<!-- void updateSubType(AccType accType); -->
<update id="updateSubType" parameterType="AccType">
	update airbnb_acc_types
	set 
		type_no = #{type.no}
	where acc_no = #{accNo}
	and type_no between 10 and 87
</update>
<!-- void updatePrivacyType(AccType accType); -->
<update id="updatePrivacyType" parameterType="AccType">
	update airbnb_acc_types
	set 
		type_no = #{type.no}
	where acc_no = #{accNo}
	and type_no in (100, 101, 102)
</update>

<!-- void updateGuestsByAccNo(Accommodation acc); -->
<update id="updateGuestsByAccNo" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_guest = #{guest}
	where acc_no = #{accNo}
</update>

<!-- void updateAddressByAccNo(Accommodation acc); -->
<update id="updateAddressByAccNo" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_address = #{address},
		acc_latitude = #{latitude},
		acc_longitude = #{longitude}
	where acc_no = #{accNo}
</update>
	
<!-- void updateImageCover(Accommodation acc); -->	
<update id="updateImageCover" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		image_cover = #{imageCover}
	where acc_no = #{accNo}
</update>

<!-- void updateAccName(Accommodation acc); -->
<update id="updateAccName" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_name = #{name}
	where acc_no = #{accNo}
</update>

<!-- void updateAccDescription(Accommodation acc); -->
<update id="updateAccDescription" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_description = #{description}
	where acc_no = #{accNo}
</update>

<!-- void updateAccPrice(Accommodation acc); -->
<update id="updateAccPrice" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_price = #{price}
	where acc_no = #{accNo}
</update>

<!-- void updateAccStatus(Accommodation registerAcc); -->
<update id="updateAccStatus" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_status = #{status}
	where acc_no = #{accNo}
</update>

<!-- void updateAcc(Accommodation acc); -->
<!--
<update id="updateAcc" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		user_no = #{user.no},
		acc_review_score = #{reviewScore},
		acc_name = #{name},
		acc_description = #{description},
		acc_address = #{address},
		acc_latitude = #{latitude},
		acc_longitude = #{longitude},
		acc_price = #{price},
		acc_guest = #{guest},
		acc_pet = #{pet},
		acc_check_in = #{checkIn},
		acc_check_out = #{checkOut},
		acc_check_In_Type = #{checkInType},
		acc_status = #{status},
		acc_updated_Date = sysdate,
		acc_view_Count = #{viewCount},
		acc_min_day = #{minDay},
		acc_max_day = #{maxDay},
		acc_rent = #{rent},
		acc_traffic_description = #{trafficDescription},
		acc_refound_description = #{refoundDescription},
		acc_cleaning_price = #{cleaningPrice},
		image_cover = #{imageCover},			
		avg_total = #{totalScore},
		avg_cleanliness = #{cleanScore},
		avg_accuracy = #{accuracyScore},
		avg_communication = #{communicationScore},
		avg_location = #{locationScore},
		avg_checkin = #{checkinScore},
		avg_value = #{valueScore},
		avg_convenience = #{convenienceScore}
	where acc_no = #{accNo}
</update>
-->

</mapper>